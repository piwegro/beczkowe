version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    
    container_name: postgres

    restart: unless-stopped

    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=main

    expose:
      - 5432

    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d


  backend:
    image: ghcr.io/piwegro/harnas:main

    container_name: backend

    restart: unless-stopped

    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB_MAIN=main
      - SERVICE_ACCOUNT_PATH=/data/serviceAccount.json
      
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.backend_secure.entrypoints=websecure"
      - "traefik.http.routers.backend_secure.rule=Host(`api.piwegro.lol`)"
      - "traefik.http.routers.backend_secure.tls.certresolver=myresolver"

    volumes:
      - ./serviceAccount.json:/data/serviceAccount.json

    expose:
      - 8080

    depends_on:
      - postgres


  frontend:
    image: ghcr.io/piwegro/perla:main

    container_name: frontend

    restart: unless-stopped

    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.frontend_secure.entrypoints=websecure"
      - "traefik.http.routers.frontend_secure.rule=Host(`piwegro.lol`,`www.piwegro.lol`)"
      - "traefik.http.routers.frontend_secure.tls.certresolver=myresolver"

    expose:
      - 3000

    depends_on:
      - backend

  
  traefik:
    image: traefik:2.9
    container_name: traefik
    
    restart: unless-stopped
    
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      - "--certificatesresolvers.myresolver.acme.email=karol@kucza.xyz"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"

    depends_on:
      - backend
      - frontend
